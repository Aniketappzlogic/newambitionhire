{"name": "test_jobs_page_email_notification_toggle", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x005880E3+60707]\n\tGetHandleVerifier [0x00588124+60772]\n\t(No symbol) [0x003B0683]\n\t(No symbol) [0x003F8660]\n\t(No symbol) [0x003F89FB]\n\t(No symbol) [0x00441022]\n\t(No symbol) [0x0041D094]\n\t(No symbol) [0x0043E824]\n\t(No symbol) [0x0041CE46]\n\t(No symbol) [0x003EC5D3]\n\t(No symbol) [0x003ED424]\n\tGetHandleVerifier [0x007CBBC3+2435075]\n\tGetHandleVerifier [0x007C7163+2416035]\n\tGetHandleVerifier [0x007E350C+2531660]\n\tGetHandleVerifier [0x0059F1B5+155125]\n\tGetHandleVerifier [0x005A5B5D+182173]\n\tGetHandleVerifier [0x0058F9B8+91640]\n\tGetHandleVerifier [0x0058FB60+92064]\n\tGetHandleVerifier [0x0057A620+4704]\n\tBaseThreadInitThunk [0x76C2FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x773B82AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x773B827E+238]", "trace": "env = 'services', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f22f40fea795e8c76a650d07b18e9347\")>, authenticated_user_recruiter = <Page_Recruiter.login.Loginrecruiter object at 0x000001D166BC00B0>\n\n    @pytest.mark.regression\n    @pytest.mark.jobs_page_jobs_email_notification_toggle\n    def test_jobs_page_email_notification_toggle(env, driver, authenticated_user_recruiter):\n        logging.info(f\"environment -> {env}\")\n        logging.info(f\"logged in\")\n        WebDriverWait(driver, 15).until(\n            EC.visibility_of_element_located((By.CSS_SELECTOR, \"body > div:nth-child(1) > div:nth-child(3) > div:nth-child(3) > div:nth-child(3) > div:nth-child(1) > div:nth-child(1)\"))\n        )\n        jobs_page = Jobs(driver)\n        jobs_page.jobs_btn.click()\n        assert_that(jobs_page.Create_Job.is_element_visible()).is_true()\n        jobs_page.Create_Job.click()\n    \n        jobtitle = Jobs(driver)\n        jobtitle.Job_Title.send_keys('Testing Draft Job')\n    \n        notificationtitle = Jobs(driver)\n        notificationtitle.Notification_Title.send_keys(\"Automated\")\n    \n        JobDescription = Jobs(driver)\n        JobDescription.Job_Description.send_keys('Draft')\n    \n        department = Jobs(driver)\n        department.Department.click()\n        department.Department_selector.click()\n    \n        industry = Jobs(driver)\n        industry.Industry.click()\n        industry.Industry_selector.click()\n    \n        Employmenttype = Jobs(driver)\n        Employmenttype.Employment_Type.click()\n        Employmenttype.Employmenttype_selector.click()\n    \n        WorkplaceType = Jobs(driver)\n        WorkplaceType.Workplace_Type.click()\n        WorkplaceType.Workplace_Type_Selector.click()\n    \n        WorkExperience = Jobs(driver)\n        WorkExperience.Work_Experience.click()\n        WorkExperience.Workplace_Experience_Selector.click()\n    \n        location = Jobs(driver)\n        location.Location.send_keys('Gurgao')\n        location.Location_selector.click()\n    \n        MinSalary = Jobs(driver)\n        MinSalary.Min_Salary.send_keys('2')\n    \n        MaxSalary = Jobs(driver)\n        MaxSalary.Max_Salary.send_keys('4')\n    \n        Next = Jobs(driver)\n        Next.Next_btn.click()\n    \n        EmailNotification = Jobs(driver)\n        EmailNotification.Email_Notification.click()\n        logging.info('toggle on')\n>       assert_that(jobs_page.Email_noti_on).is_not_empty().described_as(\"Tick mark SVG\").is_length(1)\n\ntests\\recruiter_test\\Jobs_test.py:1059: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPage_Recruiter\\Jobs_page.py:495: in Email_noti_on\n    return BaseElement(driver=self.driver, locator=locator)\nutils\\base_elements.py:43: in __init__\n    self.find()\nutils\\base_elements.py:49: in find\n    element = WebDriverWait(self.driver, 30).until(EC.visibility_of_element_located(locator=self.locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f22f40fea795e8c76a650d07b18e9347\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x000001D166B6A8E0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x005880E3+60707]\nE       \tGetHandleVerifier [0x00588124+60772]\nE       \t(No symbol) [0x003B0683]\nE       \t(No symbol) [0x003F8660]\nE       \t(No symbol) [0x003F89FB]\nE       \t(No symbol) [0x00441022]\nE       \t(No symbol) [0x0041D094]\nE       \t(No symbol) [0x0043E824]\nE       \t(No symbol) [0x0041CE46]\nE       \t(No symbol) [0x003EC5D3]\nE       \t(No symbol) [0x003ED424]\nE       \tGetHandleVerifier [0x007CBBC3+2435075]\nE       \tGetHandleVerifier [0x007C7163+2416035]\nE       \tGetHandleVerifier [0x007E350C+2531660]\nE       \tGetHandleVerifier [0x0059F1B5+155125]\nE       \tGetHandleVerifier [0x005A5B5D+182173]\nE       \tGetHandleVerifier [0x0058F9B8+91640]\nE       \tGetHandleVerifier [0x0058FB60+92064]\nE       \tGetHandleVerifier [0x0057A620+4704]\nE       \tBaseThreadInitThunk [0x76C2FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x773B82AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x773B827E+238]\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "22180208-c9ad-4d70-a864-a3f66dec9c40-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "53c0b523-e2e1-4804-ae14-b77facb94afc-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "15b1a05f-8a5f-4dce-9673-d3963972a21a-attachment.txt", "type": "text/plain"}], "start": 1744610452086, "stop": 1744610487887, "uuid": "45932e52-6092-4200-8ff4-c8a06567a032", "historyId": "2414905a8b684167298db26f18e22a96", "testCaseId": "2414905a8b684167298db26f18e22a96", "fullName": "tests.recruiter_test.Jobs_test#test_jobs_page_email_notification_toggle", "labels": [{"name": "tag", "value": "jobs_page_jobs_email_notification_toggle"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "Jobs_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "18456-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.Jobs_test"}]}