{"name": "test_registration", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00A5C203+27395]\n\t(No symbol) [0x009F3E04]\n\t(No symbol) [0x008F1B7F]\n\t(No symbol) [0x00932C65]\n\t(No symbol) [0x00932D3B]\n\t(No symbol) [0x0096EC82]\n\t(No symbol) [0x009539E4]\n\t(No symbol) [0x0096CB24]\n\t(No symbol) [0x00953736]\n\t(No symbol) [0x00927541]\n\t(No symbol) [0x009280BD]\n\tGetHandleVerifier [0x00D13AB3+2876339]\n\tGetHandleVerifier [0x00D67F7D+3221629]\n\tGetHandleVerifier [0x00ADD674+556916]\n\tGetHandleVerifier [0x00AE478C+585868]\n\t(No symbol) [0x009FCE44]\n\t(No symbol) [0x009F9858]\n\t(No symbol) [0x009F99F7]\n\t(No symbol) [0x009EBF4E]\n\tBaseThreadInitThunk [0x7703FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77C980CE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77C9809E+238]", "trace": "env = 'dev', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"525c7eb7c7f286ba89e8aa3402b1979d\")>, authenticated_user = None\n\n    @pytest.mark.registration\n    def test_registration(env, driver,authenticated_user):\n        logging.info(f\"environment -> {env}\")\n        login = authenticated_user\n        registration = Registration(driver)\n        driver.implicitly_wait(5)\n        registration.registartion_name_btn.send_keys('MRIDUL')\n        driver.implicitly_wait(2)\n        registration.email_btn.send_keys('mridulsaxena@gmail.com')\n        registration.phoneno_btn.send_keys('7503078450')\n        registration.location_btn.send_keys('Uttar Pradesh: Noida')\n        driver.implicitly_wait(10)\n        registration.condition_btn.click()\n        time.sleep(2)\n        registration.sendotp_btn.click()\n        time.sleep(5)\n        original_window = driver.current_window_handle\n        driver.execute_script(\"window.open('https://mail.google.com', '_blank');\")\n        #WebDriverWait(driver, 10).until(EC.new_window_is_opened)\n        driver.switch_to.window(driver.window_handles[-1])\n        time.sleep(8)\n        registration.gmail_btn.send_keys('mridulsaxena016@gmail.com')\n        driver.implicitly_wait(5)\n        registration.gmailnext_btn.click()\n        driver.implicitly_wait(2)\n        registration.gmail_enterpasswordbtn.send_keys('fdhcjvjgv')\n        time.sleep(2)\n>       registration.gmailnext_btn.click()\n\ntests\\candidate_test\\registration_test.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPages_Candidate\\registration.py:50: in gmailnext_btn\n    return BaseElement(driver=self.driver, locator=locator)\nutils\\base_elements.py:43: in __init__\n    self.find()\nutils\\base_elements.py:49: in find\n    element = WebDriverWait(self.driver, 30).until(EC.visibility_of_element_located(locator=self.locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"525c7eb7c7f286ba89e8aa3402b1979d\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000002BCF6B03B00>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00A5C203+27395]\nE       \t(No symbol) [0x009F3E04]\nE       \t(No symbol) [0x008F1B7F]\nE       \t(No symbol) [0x00932C65]\nE       \t(No symbol) [0x00932D3B]\nE       \t(No symbol) [0x0096EC82]\nE       \t(No symbol) [0x009539E4]\nE       \t(No symbol) [0x0096CB24]\nE       \t(No symbol) [0x00953736]\nE       \t(No symbol) [0x00927541]\nE       \t(No symbol) [0x009280BD]\nE       \tGetHandleVerifier [0x00D13AB3+2876339]\nE       \tGetHandleVerifier [0x00D67F7D+3221629]\nE       \tGetHandleVerifier [0x00ADD674+556916]\nE       \tGetHandleVerifier [0x00AE478C+585868]\nE       \t(No symbol) [0x009FCE44]\nE       \t(No symbol) [0x009F9858]\nE       \t(No symbol) [0x009F99F7]\nE       \t(No symbol) [0x009EBF4E]\nE       \tBaseThreadInitThunk [0x7703FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C980CE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C9809E+238]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "c79135e9-90aa-45f5-97ed-87edd4332c5f-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "86a8bfb8-c97f-4165-b9d9-876390395c6c-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "f39dd587-a168-4f35-a0fa-56cecbdac66f-attachment.txt", "type": "text/plain"}], "start": 1721731497204, "stop": 1721731549058, "uuid": "d43ce4be-0865-42f5-951f-0bd1be897f1f", "historyId": "b91bc7f231e3740fe6c0b8995a99c077", "testCaseId": "b91bc7f231e3740fe6c0b8995a99c077", "fullName": "tests.candidate_test.registration_test#test_registration", "labels": [{"name": "tag", "value": "registration"}, {"name": "parentSuite", "value": "tests.candidate_test"}, {"name": "suite", "value": "registration_test"}, {"name": "host", "value": "DESKTOP-CDJ5FU7"}, {"name": "thread", "value": "24548-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.candidate_test.registration_test"}]}