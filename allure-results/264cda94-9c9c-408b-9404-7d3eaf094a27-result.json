{"name": "test_login_page_linkedinlinks", "status": "failed", "statusDetails": {"message": "AssertionError: Expected <Sign in> to be equal to <Sign in\nStay updated on your professional world.\nEmail or phone\nPassword\nShow\nForgot password?\nKeep me logged in\nSign in\nor\nBy clicking Continue, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.\nContinue with Google\nSign in with Apple>, but was not.", "trace": "env = 'dev', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1d5cc0516fafec6a71db3b86484e8bf5\")>, recruiter_user = None\n\n    @pytest.mark.regression\n    @pytest.mark.regression_recruiter_loginpage\n    @pytest.mark.login_page_linkedinlinks\n    def test_login_page_linkedinlinks(env, driver, recruiter_user):\n        logging.info(f\"environment -> {env}\")\n        login = recruiter_user\n        recruiterlogin = Loginrecruiter(driver)\n        original_window = driver.current_window_handle\n    \n        recruiterlogin.social_media_linkedin_btn.click()\n        WebDriverWait(driver, 10).until(lambda driver: len(driver.window_handles) > 1)\n    \n        # Switch to the new tab\n        for handle in driver.window_handles:\n            if handle != original_window:\n                driver.switch_to.window(handle)\n                break\n        linkedin_page_text = recruiterlogin.linkedin_page.get_text()\n        logging.info(linkedin_page_text)\n>       assert_that(\"Sign in\").is_equal_to(linkedin_page_text)\nE       AssertionError: Expected <Sign in> to be equal to <Sign in\nE       Stay updated on your professional world.\nE       Email or phone\nE       Password\nE       Show\nE       Forgot password?\nE       Keep me logged in\nE       Sign in\nE       or\nE       By clicking Continue, you agree to LinkedIn’s User Agreement, Privacy Policy, and Cookie Policy.\nE       Continue with Google\nE       Sign in with Apple>, but was not.\n\ntests\\recruiter_test\\login_test.py:270: AssertionError"}, "attachments": [{"name": "log", "source": "f2e99fd8-4adf-41df-8d41-fdf98e9640b3-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "370750f2-826f-4f62-931e-c272f46290ef-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "1763e0b2-60fa-468f-a5f3-6d02013b9012-attachment.txt", "type": "text/plain"}], "start": 1740122195212, "stop": 1740122201553, "uuid": "5a36c5e8-51e6-4758-a488-e3270db3dfbb", "historyId": "dcfaa9b9ccb8643aaf088949a3161e16", "testCaseId": "dcfaa9b9ccb8643aaf088949a3161e16", "fullName": "tests.recruiter_test.login_test#test_login_page_linkedinlinks", "labels": [{"name": "tag", "value": "login_page_linkedinlinks"}, {"name": "tag", "value": "regression_recruiter_loginpage"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "login_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "15364-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.login_test"}]}