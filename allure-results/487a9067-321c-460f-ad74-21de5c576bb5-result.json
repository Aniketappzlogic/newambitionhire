{"name": "test_login_trouble_signing", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=132.0.6834.197); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x005F74A3+25091]\n\t(No symbol) [0x0057DC04]\n\t(No symbol) [0x0045B373]\n\t(No symbol) [0x00460C3D]\n\t(No symbol) [0x00462CBA]\n\t(No symbol) [0x00462D37]\n\t(No symbol) [0x004A119B]\n\t(No symbol) [0x004A0547]\n\t(No symbol) [0x00495688]\n\t(No symbol) [0x004C1F0C]\n\t(No symbol) [0x00494E44]\n\t(No symbol) [0x004C21A4]\n\t(No symbol) [0x004DB49E]\n\t(No symbol) [0x004C1CA6]\n\t(No symbol) [0x004931D5]\n\t(No symbol) [0x0049435D]\n\tGetHandleVerifier [0x008F07C3+3142947]\n\tGetHandleVerifier [0x00901A2B+3213195]\n\tGetHandleVerifier [0x008FC412+3191154]\n\tGetHandleVerifier [0x00698720+685184]\n\t(No symbol) [0x00586E1D]\n\t(No symbol) [0x00583E18]\n\t(No symbol) [0x00583FB6]\n\t(No symbol) [0x005766F0]\n\tBaseThreadInitThunk [0x7643FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7753809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7753806E+238]", "trace": "env = 'services', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"47fd4929626269115856c09c4c410348\")>, authenticated_user_recruiter = <Page_Recruiter.login.Loginrecruiter object at 0x0000025FD40955E0>\n\n    @pytest.mark.regression\n    @pytest.mark.login_trouble_signing\n    def test_login_trouble_signing(env, driver, authenticated_user_recruiter):\n        logging.info(f\"environment -> {env}\")\n        login = authenticated_user_recruiter\n        recruiterlogin = Loginrecruiter(driver)\n>       recruiterlogin.troublesigning_btn.click()\n\ntests\\recruiter_test\\login_test.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\base_elements.py:77: in click\n    element.click()\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000025FD3F154C0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7753809E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7753806E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=132.0.6834.197); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x005F74A3+25091]\nE       \t(No symbol) [0x0057DC04]\nE       \t(No symbol) [0x0045B373]\nE       \t(No symbol) [0x00460C3D]\nE       \t(No symbol) [0x00462CBA]\nE       \t(No symbol) [0x00462D37]\nE       \t(No symbol) [0x004A119B]\nE       \t(No symbol) [0x004A0547]\nE       \t(No symbol) [0x00495688]\nE       \t(No symbol) [0x004C1F0C]\nE       \t(No symbol) [0x00494E44]\nE       \t(No symbol) [0x004C21A4]\nE       \t(No symbol) [0x004DB49E]\nE       \t(No symbol) [0x004C1CA6]\nE       \t(No symbol) [0x004931D5]\nE       \t(No symbol) [0x0049435D]\nE       \tGetHandleVerifier [0x008F07C3+3142947]\nE       \tGetHandleVerifier [0x00901A2B+3213195]\nE       \tGetHandleVerifier [0x008FC412+3191154]\nE       \tGetHandleVerifier [0x00698720+685184]\nE       \t(No symbol) [0x00586E1D]\nE       \t(No symbol) [0x00583E18]\nE       \t(No symbol) [0x00583FB6]\nE       \t(No symbol) [0x005766F0]\nE       \tBaseThreadInitThunk [0x7643FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x7753809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7753806E+238]\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "attachments": [{"name": "log", "source": "8b4e4613-4d55-402c-939c-5c1ee3d7de6b-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "d22ff62b-ff69-4553-9e0d-4a2b867810a9-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "fbe59b58-5779-4c90-967f-6c5489aa34eb-attachment.txt", "type": "text/plain"}], "start": 1739535726771, "stop": 1739535727173, "uuid": "7e0c1cf1-903e-4bb1-8c0a-4e6838a00444", "historyId": "6aef5bdd25d8a2ceae9be5f5cd554f1f", "testCaseId": "6aef5bdd25d8a2ceae9be5f5cd554f1f", "fullName": "tests.recruiter_test.login_test#test_login_trouble_signing", "labels": [{"name": "tag", "value": "login_trouble_signing"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "login_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "16780-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.login_test"}]}