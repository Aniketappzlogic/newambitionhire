{"name": "test_invalid_email_login_recruiter", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0065D363+60275]\n\tGetHandleVerifier [0x0065D3A4+60340]\n\t(No symbol) [0x004906F3]\n\t(No symbol) [0x004D8690]\n\t(No symbol) [0x004D8A2B]\n\t(No symbol) [0x00520EE2]\n\t(No symbol) [0x004FD0D4]\n\t(No symbol) [0x0051E6EB]\n\t(No symbol) [0x004FCE86]\n\t(No symbol) [0x004CC623]\n\t(No symbol) [0x004CD474]\n\tGetHandleVerifier [0x008A8FE3+2467827]\n\tGetHandleVerifier [0x008A45E6+2448886]\n\tGetHandleVerifier [0x008BF80C+2560028]\n\tGetHandleVerifier [0x00673DF5+153093]\n\tGetHandleVerifier [0x0067A3BD+179149]\n\tGetHandleVerifier [0x00664BB8+91080]\n\tGetHandleVerifier [0x00664D60+91504]\n\tGetHandleVerifier [0x0064FA10+4640]\n\tBaseThreadInitThunk [0x76E3FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x774282AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x7742827E+238]", "trace": "env = 'services', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2a993fd9ebd3928e1c336f828f6f7546\")>, recruiter_user = None\n\n    @pytest.mark.regression\n    @pytest.mark.regression_recruiter_loginpage\n    @pytest.mark.invalid_email_login_recruiter\n    def test_invalid_email_login_recruiter(env, driver, recruiter_user):\n        logging.info(f\"environment -> {env}\")\n        login = recruiter_user\n        recruiterlogin = Loginrecruiter(driver)\n        recruiterlogin.username_btn.send_keys('invalid@gmail.com')\n        recruiterlogin.password_btn.send_keys('123')\n        recruiterlogin.login_btn.click()\n>       response = recruiterlogin.error_occured.get_text()\n\ntests\\recruiter_test\\login_test.py:72: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPage_Recruiter\\login.py:50: in error_occured\n    return BaseElement(driver=self.driver, locator=locator)\nutils\\base_elements.py:43: in __init__\n    self.find()\nutils\\base_elements.py:49: in find\n    element = WebDriverWait(self.driver, 30).until(EC.visibility_of_element_located(locator=self.locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"2a993fd9ebd3928e1c336f828f6f7546\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x00000252CD3FCE00>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0065D363+60275]\nE       \tGetHandleVerifier [0x0065D3A4+60340]\nE       \t(No symbol) [0x004906F3]\nE       \t(No symbol) [0x004D8690]\nE       \t(No symbol) [0x004D8A2B]\nE       \t(No symbol) [0x00520EE2]\nE       \t(No symbol) [0x004FD0D4]\nE       \t(No symbol) [0x0051E6EB]\nE       \t(No symbol) [0x004FCE86]\nE       \t(No symbol) [0x004CC623]\nE       \t(No symbol) [0x004CD474]\nE       \tGetHandleVerifier [0x008A8FE3+2467827]\nE       \tGetHandleVerifier [0x008A45E6+2448886]\nE       \tGetHandleVerifier [0x008BF80C+2560028]\nE       \tGetHandleVerifier [0x00673DF5+153093]\nE       \tGetHandleVerifier [0x0067A3BD+179149]\nE       \tGetHandleVerifier [0x00664BB8+91080]\nE       \tGetHandleVerifier [0x00664D60+91504]\nE       \tGetHandleVerifier [0x0064FA10+4640]\nE       \tBaseThreadInitThunk [0x76E3FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x774282AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7742827E+238]\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "0baffdc7-a326-4c91-8254-10fb75d7e102-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "e6fb1982-c823-4b79-8cd2-cc7c2e91712f-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "5613d4a4-ba82-4382-a4e2-84cef6453ccf-attachment.txt", "type": "text/plain"}], "start": 1745925241162, "stop": 1745925273973, "uuid": "67d6cb91-9f28-42a1-9e0e-099dace7495a", "historyId": "885a84663e7a6457d2b33ccdc4d1e3de", "testCaseId": "885a84663e7a6457d2b33ccdc4d1e3de", "fullName": "tests.recruiter_test.login_test#test_invalid_email_login_recruiter", "labels": [{"name": "tag", "value": "invalid_email_login_recruiter"}, {"name": "tag", "value": "regression_recruiter_loginpage"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "login_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "10660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.login_test"}]}