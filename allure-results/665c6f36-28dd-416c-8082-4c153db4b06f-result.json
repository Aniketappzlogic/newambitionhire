{"name": "test_jobs_page_lastweekjobsfilter", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "env = 'dev', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c4d488e74620f8bb6fbc1450612f150b\")>, authenticated_user_recruiter = <Page_Recruiter.login.Loginrecruiter object at 0x000001805D22F4A0>\n\n    @pytest.mark.regression\n    @pytest.mark.jobs_page_lastweekjobsfilter\n    def test_jobs_page_lastweekjobsfilter(env, driver, authenticated_user_recruiter):\n        logging.info(f\"environment -> {env}\")\n        #login = authenticated_user_recruiter\n        logging.info(f\"logged in\")\n        WebDriverWait(driver, 15).until(\n            EC.visibility_of_element_located((By.CSS_SELECTOR, \"body > div:nth-child(1) > div:nth-child(3) > div:nth-child(3) > div:nth-child(3) > div:nth-child(1) > div:nth-child(1)\"))\n        )\n        jobs_page = Jobs(driver)\n        jobs_page.jobs_btn.click()\n        logging.info(f\"jobs button clicked\")\n        assert_that(jobs_page.jobs_card.is_element_visible()).is_true()\n        jobs_page.sortby.click()\n        jobs_page.lastweek.click()\n        assert_that(jobs_page.jobs_card.is_element_visible()).is_true()\n        logging.info(\"GOOD\")\n>       elements = driver.find_elements(By.XPATH, jobs_page.jobs_creation_date)\n\ntests\\recruiter_test\\Jobs_test.py:159: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPage_Recruiter\\Jobs_page.py:54: in jobs_creation_date\n    return BaseElement(driver=self.driver, locator=locator)\nutils\\base_elements.py:43: in __init__\n    self.find()\nutils\\base_elements.py:49: in find\n    element = WebDriverWait(self.driver, 30).until(EC.visibility_of_element_located(locator=self.locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c4d488e74620f8bb6fbc1450612f150b\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x000001805D1D2A20>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "ce1f4d6f-3276-4068-a07f-136b7c257c7e-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "f3c46ac2-5967-4af3-b5cb-7b4793238cae-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "fe2bca0e-1e11-4744-a4a6-bcb572f7a634-attachment.txt", "type": "text/plain"}], "start": 1740476409901, "stop": 1740476456174, "uuid": "f0ad43fd-0b16-4781-a3e3-a0e8c78841fc", "historyId": "939b9e3c6d25712668edb03be0e0abbe", "testCaseId": "939b9e3c6d25712668edb03be0e0abbe", "fullName": "tests.recruiter_test.Jobs_test#test_jobs_page_lastweekjobsfilter", "labels": [{"name": "tag", "value": "jobs_page_lastweekjobsfilter"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "Jobs_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "12908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.Jobs_test"}]}