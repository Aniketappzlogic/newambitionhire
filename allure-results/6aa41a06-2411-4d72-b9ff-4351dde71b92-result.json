{"name": "test_login_page_instagramlinks", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00E10283+25139]\n\t(No symbol) [0x00D9B234]\n\t(No symbol) [0x00C704A3]\n\t(No symbol) [0x00CB8338]\n\t(No symbol) [0x00CB868B]\n\t(No symbol) [0x00D00F62]\n\t(No symbol) [0x00CDCF84]\n\t(No symbol) [0x00CFE6E1]\n\t(No symbol) [0x00CDCD36]\n\t(No symbol) [0x00CABD29]\n\t(No symbol) [0x00CAD064]\n\tGetHandleVerifier [0x0111B143+3215603]\n\tGetHandleVerifier [0x011322BA+3310186]\n\tGetHandleVerifier [0x0112C4D2+3286146]\n\tGetHandleVerifier [0x00EA9C80+654384]\n\t(No symbol) [0x00DA45BD]\n\t(No symbol) [0x00DA14A8]\n\t(No symbol) [0x00DA1647]\n\t(No symbol) [0x00D93D20]\n\tBaseThreadInitThunk [0x7643FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7753809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7753806E+238]", "trace": "env = 'dev', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a423cb6cbec7b381fc26f63010c04073\")>, recruiter_user = None\n\n    @pytest.mark.regression\n    @pytest.mark.regression_recruiter_loginpage\n    @pytest.mark.login_page_instagramlinks\n    def test_login_page_instagramlinks(env, driver, recruiter_user):\n        logging.info(f\"environment -> {env}\")\n        login = recruiter_user\n        recruiterlogin = Loginrecruiter(driver)\n        original_window = driver.current_window_handle\n    \n        recruiterlogin.social_media_instagram_btn.click()\n        WebDriverWait(driver, 10).until(lambda driver: len(driver.window_handles) > 1)\n    \n        # Switch to the new tab\n        for handle in driver.window_handles:\n            if handle != original_window:\n                driver.switch_to.window(handle)\n                break\n>       instagram_page_text = recruiterlogin.instagram_page.get_text()\n\ntests\\recruiter_test\\login_test.py:244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPage_Recruiter\\login.py:121: in instagram_page\n    return BaseElement(driver=self.driver, locator=locator)\nutils\\base_elements.py:43: in __init__\n    self.find()\nutils\\base_elements.py:49: in find\n    element = WebDriverWait(self.driver, 30).until(EC.visibility_of_element_located(locator=self.locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a423cb6cbec7b381fc26f63010c04073\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x000002C5C0685BC0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00E10283+25139]\nE       \t(No symbol) [0x00D9B234]\nE       \t(No symbol) [0x00C704A3]\nE       \t(No symbol) [0x00CB8338]\nE       \t(No symbol) [0x00CB868B]\nE       \t(No symbol) [0x00D00F62]\nE       \t(No symbol) [0x00CDCF84]\nE       \t(No symbol) [0x00CFE6E1]\nE       \t(No symbol) [0x00CDCD36]\nE       \t(No symbol) [0x00CABD29]\nE       \t(No symbol) [0x00CAD064]\nE       \tGetHandleVerifier [0x0111B143+3215603]\nE       \tGetHandleVerifier [0x011322BA+3310186]\nE       \tGetHandleVerifier [0x0112C4D2+3286146]\nE       \tGetHandleVerifier [0x00EA9C80+654384]\nE       \t(No symbol) [0x00DA45BD]\nE       \t(No symbol) [0x00DA14A8]\nE       \t(No symbol) [0x00DA1647]\nE       \t(No symbol) [0x00D93D20]\nE       \tBaseThreadInitThunk [0x7643FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x7753809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7753806E+238]\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "dface0d6-0e9e-4d3a-b46b-5e03a816e5f9-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "5a40ccb8-efdd-41e0-aeaa-7395aa4e8b89-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "ce309977-9afa-4e52-9438-3f0ccc2b2e13-attachment.txt", "type": "text/plain"}], "start": 1740121486697, "stop": 1740121521573, "uuid": "55310c6b-c849-4fbf-bb49-095f7d86fe0e", "historyId": "73c3728160953ea3e977f977487d4fac", "testCaseId": "73c3728160953ea3e977f977487d4fac", "fullName": "tests.recruiter_test.login_test#test_login_page_instagramlinks", "labels": [{"name": "tag", "value": "login_page_instagramlinks"}, {"name": "tag", "value": "regression_recruiter_loginpage"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "login_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "13124-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.login_test"}]}