{"name": "test_jobs_page_assessments_toggle", "status": "failed", "statusDetails": {"message": "AssertionError: Expected <False>, but was not.", "trace": "env = 'dev', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ba9eff1314b6cd80b4e4cc214ffe672b\")>, authenticated_user_recruiter = <Page_Recruiter.login.Loginrecruiter object at 0x0000029CBBD456A0>\n\n    @pytest.mark.regression\n    @pytest.mark.jobs_page_assessments_toggle\n    def test_jobs_page_assessments_toggle(env, driver, authenticated_user_recruiter):\n        logging.info(f\"environment -> {env}\")\n        logging.info(f\"logged in\")\n        WebDriverWait(driver, 15).until(\n            EC.visibility_of_element_located((By.CSS_SELECTOR, \"body > div:nth-child(1) > div:nth-child(3) > div:nth-child(3) > div:nth-child(3) > div:nth-child(1) > div:nth-child(1)\"))\n        )\n        jobs_page = Jobs(driver)\n        jobs_page.jobs_btn.click()\n        assert_that(jobs_page.Create_Job.is_element_visible()).is_true()\n        jobs_page.Create_Job.click()\n    \n        jobtitle = Jobs(driver)\n        jobtitle.Job_Title.send_keys('Testing Job')\n    \n        notificationtitle = Jobs(driver)\n        notificationtitle.Notification_Title.send_keys(\"Automated\")\n    \n        JobDescription = Jobs(driver)\n        JobDescription.Job_Description.send_keys('Draft')\n    \n        department = Jobs(driver)\n        department.Department.click()\n        department.Department_selector.click()\n    \n        industry = Jobs(driver)\n        industry.Industry.click()\n        industry.Industry_selector.click()\n    \n        Employmenttype = Jobs(driver)\n        Employmenttype.Employment_Type.click()\n        Employmenttype.Employmenttype_selector.click()\n    \n        WorkplaceType = Jobs(driver)\n        WorkplaceType.Workplace_Type.click()\n        WorkplaceType.Workplace_Type_Selector.click()\n    \n        WorkExperience = Jobs(driver)\n        WorkExperience.Work_Experience.click()\n        WorkExperience.Workplace_Experience_Selector.click()\n    \n        location = Jobs(driver)\n        location.Location.send_keys('Gurg')\n        location.Location_selector.click()\n    \n        MinSalary = Jobs(driver)\n        MinSalary.Min_Salary.send_keys('2')\n    \n        MaxSalary = Jobs(driver)\n        MaxSalary.Max_Salary.send_keys('4')\n    \n        Next = Jobs(driver)\n        Next.Next_btn.click()\n    \n        OneSittingToggle = Jobs(driver)\n        OneSittingToggle.OneSitting_toggle.click()\n    \n        Nxt = Jobs(driver)\n        Nxt.Next_butn.click()\n    \n        Assessments = Jobs(driver)\n        Assessments.Assessment_toggle.click()\n        assert_that(jobs_page.toggle_on.is_element_visible()).is_true()\n    \n        CTQToggle = Jobs(driver)\n        CTQToggle.CTQ_Toggle.click()\n>       assert_that(jobs_page.toggle_on.is_element_visible()).is_false()\nE       AssertionError: Expected <False>, but was not.\n\ntests\\recruiter_test\\Jobs_test.py:1504: AssertionError"}, "attachments": [{"name": "log", "source": "9393ee0a-e8ee-4d40-8206-a262d7d54a22-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "f25cc31e-b609-44d3-86d4-1bd12e2048cc-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "abe94c86-61e7-4d79-be55-4a11e3914b20-attachment.txt", "type": "text/plain"}], "start": 1745234579772, "stop": 1745234591826, "uuid": "735618d5-a3c7-4c19-bc95-b52cf13676bb", "historyId": "049e8315cbb2de5b781a07af575ba844", "testCaseId": "049e8315cbb2de5b781a07af575ba844", "fullName": "tests.recruiter_test.Jobs_test#test_jobs_page_assessments_toggle", "labels": [{"name": "tag", "value": "jobs_page_assessments_toggle"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "Jobs_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "13184-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.Jobs_test"}]}