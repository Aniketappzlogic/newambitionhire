{"name": "test_jobs_page_lastweekjobsfilter", "status": "failed", "statusDetails": {"message": "AssertionError: Expected <2025-02-19 00:00:00> to be between <2025-02-19 12:01:25> and <2025-02-25 12:01:25>, but was not.", "trace": "env = 'dev', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"72b3fa77aed8d9aa4bd58fb13733ed8d\")>, authenticated_user_recruiter = <Page_Recruiter.login.Loginrecruiter object at 0x0000024CC1223380>\n\n    @pytest.mark.regression\n    @pytest.mark.jobs_page_lastweekjobsfilter\n    def test_jobs_page_lastweekjobsfilter(env, driver, authenticated_user_recruiter):\n        logging.info(f\"environment -> {env}\")\n        #login = authenticated_user_recruiter\n        logging.info(f\"logged in\")\n        WebDriverWait(driver, 15).until(\n            EC.visibility_of_element_located((By.CSS_SELECTOR, \"body > div:nth-child(1) > div:nth-child(3) > div:nth-child(3) > div:nth-child(3) > div:nth-child(1) > div:nth-child(1)\"))\n        )\n        jobs_page = Jobs(driver)\n        jobs_page.jobs_btn.click()\n        logging.info(f\"jobs button clicked\")\n        assert_that(jobs_page.jobs_card.is_element_visible()).is_true()\n        jobs_page.sortby.click()\n        jobs_page.lastweek.click()\n        assert_that(jobs_page.jobs_card.is_element_visible()).is_true()\n        elements =  jobs_page.job_creation_date.find_elements()\n    \n        current_date = datetime.now()\n        last_week_start = current_date - timedelta(weeks=1)\n        last_week_end = current_date - timedelta(days=1)  # Yesterday, since it's \"last week\"\n    \n        for element in elements:\n            JobCardText = element.text\n    \n        match = re.search(r\"Created on\\s*([A-Za-z]+ \\d{1,2}, \\d{4})\", JobCardText)\n    \n        if match:\n            job_creation_date_str = match.group(1)\n            logging.info(f\"Extracted Job Creation Date: {job_creation_date_str}\")\n    \n            # Convert the extracted date string into a datetime object\n            job_creation_date = datetime.strptime(job_creation_date_str, \"%B %d, %Y\")\n    \n            # Assert that the job creation date is within the last week range\n>           assert_that(job_creation_date).is_between(last_week_start, last_week_end)\nE           AssertionError: Expected <2025-02-19 00:00:00> to be between <2025-02-19 12:01:25> and <2025-02-25 12:01:25>, but was not.\n\ntests\\recruiter_test\\Jobs_test.py:178: AssertionError"}, "attachments": [{"name": "log", "source": "ef941b55-e6e3-412b-882f-4908a5beef75-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "bd4bc11f-2efa-4bf5-adf2-89ce7a70909e-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "5192d39e-eb90-4652-af17-28bbeec5b8bb-attachment.txt", "type": "text/plain"}], "start": 1740551473760, "stop": 1740551486102, "uuid": "c942b644-a3b9-46b3-b0cc-e8c79bab0823", "historyId": "939b9e3c6d25712668edb03be0e0abbe", "testCaseId": "939b9e3c6d25712668edb03be0e0abbe", "fullName": "tests.recruiter_test.Jobs_test#test_jobs_page_lastweekjobsfilter", "labels": [{"name": "tag", "value": "jobs_page_lastweekjobsfilter"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "Jobs_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "15824-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.Jobs_test"}]}