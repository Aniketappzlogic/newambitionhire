{"name": "test_login_page_instagramlinks", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "env = 'services', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8f15f335b566cae8bbad7fe9ed0d9c8a\")>, recruiter_user = None\n\n    @pytest.mark.regression\n    @pytest.mark.regression_recruiter_loginpage\n    @pytest.mark.login_page_instagramlinks\n    def test_login_page_instagramlinks(env, driver, recruiter_user):\n        logging.info(f\"environment -> {env}\")\n        login = recruiter_user\n        recruiterlogin = Loginrecruiter(driver)\n        original_window = driver.current_window_handle\n    \n>       window_count = recruiterlogin.aboutuspage_btn.get_window_handle_count()\n\ntests\\recruiter_test\\login_test.py:246: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\base_elements.py:318: in get_window_handle_count\n    WebDriverWait(self.driver, timeout=10).until(lambda driver: len(driver.window_handles) > 1)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8f15f335b566cae8bbad7fe9ed0d9c8a\")>, method = <function BaseElement.get_window_handle_count.<locals>.<lambda> at 0x000002814083DA80>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "0f3bd7ff-a1fe-41b7-a83d-a9ac2a23b0dc-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "14fc38b6-55f6-44c5-a083-89c7bf6d3410-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "d60b5161-0522-4706-ae2b-4fd9fbf53944-attachment.txt", "type": "text/plain"}], "start": 1745986946003, "stop": 1745986956418, "uuid": "cfeba75a-c8e1-4eea-a4ed-1fb29abdecd4", "historyId": "73c3728160953ea3e977f977487d4fac", "testCaseId": "73c3728160953ea3e977f977487d4fac", "fullName": "tests.recruiter_test.login_test#test_login_page_instagramlinks", "labels": [{"name": "tag", "value": "login_page_instagramlinks"}, {"name": "tag", "value": "regression_recruiter_loginpage"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "login_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "21952-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.login_test"}]}