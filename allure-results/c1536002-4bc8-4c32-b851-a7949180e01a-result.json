{"name": "test_create_jobs", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x009A0B43+25139]\n\t(No symbol) [0x009313F4]\n\t(No symbol) [0x008104E3]\n\t(No symbol) [0x008583D7]\n\t(No symbol) [0x0085872B]\n\t(No symbol) [0x008A1002]\n\t(No symbol) [0x0087D014]\n\t(No symbol) [0x0089E778]\n\t(No symbol) [0x0087CDC6]\n\t(No symbol) [0x0084BDE9]\n\t(No symbol) [0x0084D124]\n\tGetHandleVerifier [0x00CA4373+3185251]\n\tGetHandleVerifier [0x00CC291A+3309578]\n\tGetHandleVerifier [0x00CBCF42+3286578]\n\tGetHandleVerifier [0x00A37AE0+643536]\n\t(No symbol) [0x0093A20D]\n\t(No symbol) [0x009370B8]\n\t(No symbol) [0x00937257]\n\t(No symbol) [0x00929E00]\n\tBaseThreadInitThunk [0x7716FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77E682AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77E6827E+238]", "trace": "env = 'dev', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"aa7fd87f3882b2b908da1fbce5e3cb2c\")>, authenticated_user_recruiter = <Page_Recruiter.login.Loginrecruiter object at 0x0000023E686B49B0>\n\n    @pytest.mark.regression\n    @pytest.mark.create_job\n    def test_create_jobs(env, driver, authenticated_user_recruiter):\n        logging.info(f\"environment -> {env}\")\n        login = authenticated_user_recruiter\n        logging.info(f\"Password entered\")\n    \n        # recruiter_login.hidepassword_btn.click()\n        # logging.info(f\"hide passwrd btn clicked\")\n    \n        WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, \"//span[contains(text(), 'Login')]\"))\n        )\n        #recruiter_login.login_btn.click()\n        logging.info(f\"login btn clicked\")\n        #time.sleep(5)\n        WebDriverWait(driver, 10).until(\n            EC.visibility_of_element_located((By.XPATH, \"(//h2[text()='Private Jobs'])\"))\n        )\n    \n        jobs_page = Jobs(driver)\n        jobs_page.jobs_btn.click()\n        logging.info(f\"jobs btn clicked\")\n        time.sleep(2)\n    \n    \n        # activebtn = Jobs(driver)\n        # activebtn.active_btn.click()\n        # logging.info(f\"active btn clicked\")\n        #\n        # draftsbtn = Jobs(driver)\n        # draftsbtn.drafts_btn.click()\n        #\n        # inactivebtn = Jobs(driver)\n        # inactivebtn.inactive_btn.click()\n        # logging.info(f\"inactive btn clicked\")\n        #\n        # sortby_btn = Jobs(driver)\n        # sortby_btn.Sortby.click()\n        #\n        # last2week = Jobs(driver)\n        # last2week.last2week.click()\n        #\n        # searchtab = Jobs(driver)\n        # searchtab.search_tab.send_keys('3rd July Testing')\n        #\n        # detailsbtn = Jobs(driver)\n        # detailsbtn.details_btn.click()\n        #\n        # candidatesbtn = Jobs(driver)\n        # candidatesbtn.candidates_btn.click()\n        # logging.info(f\"candidate btn clicked\")\n        # #---------------------------------------------\n        #\n        #\n        # # WebDriverWait(driver, 3).until(\n        # #     EC.element_to_be_clickable((By.CSS_SELECTOR, \"#input-0\"))\n        # # )\n        # # candidatecheckbox = Jobs(driver)\n        # # candidatecheckbox.candidates_checkbox.click()\n        # #-------------------------------------------------\n        #\n        # Settings = Jobs(driver)\n        # Settings.Settings_btn.click()\n        #\n        # jobworkflow = Jobs(driver)\n        # jobworkflow.Job_Workflow_btn.click()\n        #\n        # Proctoringbtn = Jobs(driver)\n        # Proctoringbtn.Proctoring_btn.click()\n        #\n        # Cut_off = Jobs(driver)\n        # Cut_off.Cutoff.click()\n        #\n        # Applicationform = Jobs(driver)\n        # Applicationform.Application_Form.click()\n        #\n        # Languagebtn = Jobs(driver)\n        # Languagebtn.Language_btn.click()\n        # logging.info(f\"Lang btn Created\")\n        #\n        # Savebtn = Jobs(driver)\n        # Savebtn.Save_btn.click()\n        # logging.info(f\"save btn clicked\")\n        #\n        #\n        # jobs_page = Jobs(driver)\n        # jobs_page.jobs_btn.click()\n    \n    \n    #CREATE JOB\n    # def test_create_job(env, driver, authenticated_user):\n    #     logging.info(f\"environment -> {env}\")\n    #     login = authenticated_user\n    #     recruiter_login = Loginrecruiter(driver)\n    #     recruiter_login.username_btn.send_keys('inderjeetkmcs@gmail.com')\n    #     recruiter_login.password_btn.send_keys('123')\n    #     logging.info(f\"Password entered\")\n    #\n    #         # recruiter_login.hidepassword_btn.click()\n    #         # logging.info(f\"hide passwrd btn clicked\")\n    #\n    #     WebDriverWait(driver, 10).until(\n    #         EC.element_to_be_clickable((By.XPATH, \"//span[contains(text(), 'Login')]\"))\n    #         )\n    #     recruiter_login.login_btn.click()\n    #     logging.info(f\"login btn clicked\")\n    #         # time.sleep(5)\n    #     WebDriverWait(driver, 10).until(\n    #         EC.visibility_of_element_located((By.XPATH, \"(//h2[text()='Private Jobs'])\"))\n    #         )\n    \n        jobs_page = Jobs(driver)\n        jobs_page.jobs_btn.click()\n        logging.info(f\"jobs btn clicked\")\n        time.sleep(2)\n    \n        createjob = Jobs(driver)\n        createjob.Create_Job.click()\n        logging.info(f\"create job Clicked\")\n    \n        jobtitle = Jobs(driver)\n        jobtitle.Job_Title.send_keys('ONE WAY 0603')\n    \n        notificationtitle = Jobs(driver)\n        notificationtitle.Notification_Title.send_keys(\"Automated\")\n    \n        JobDescription = Jobs(driver)\n        JobDescription.Job_Description.send_keys('automated')\n    \n        department = Jobs(driver)\n        department.Department.click()\n        department.Department_selector.click()\n    \n        industry = Jobs(driver)\n        industry.Industry.click()\n        industry.Industry_selector.click()\n    \n        Employmenttype = Jobs(driver)\n        Employmenttype.Employment_Type.click()\n        Employmenttype.Employmenttype_selector.click()\n    \n        WorkplaceType = Jobs(driver)\n        WorkplaceType.Workplace_Type.click()\n        WorkplaceType.Workplace_Type_Selector.click()\n    \n        WorkExperience = Jobs(driver)\n        WorkExperience.Work_Experience.click()\n        WorkExperience.Workplace_Experience_Selector.click()\n    \n        location = Jobs(driver)\n        location.Location.send_keys('Gurgao')\n>       location.Location_selector.click()\n\ntests\\recruiter_test\\create_job_test.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPage_Recruiter\\Jobs_page.py:382: in Location_selector\n    return BaseElement(driver=self.driver, locator=locator)\nutils\\base_elements.py:43: in __init__\n    self.find()\nutils\\base_elements.py:49: in find\n    element = WebDriverWait(self.driver, 30).until(EC.visibility_of_element_located(locator=self.locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"aa7fd87f3882b2b908da1fbce5e3cb2c\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x0000023E68672AC0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x009A0B43+25139]\nE       \t(No symbol) [0x009313F4]\nE       \t(No symbol) [0x008104E3]\nE       \t(No symbol) [0x008583D7]\nE       \t(No symbol) [0x0085872B]\nE       \t(No symbol) [0x008A1002]\nE       \t(No symbol) [0x0087D014]\nE       \t(No symbol) [0x0089E778]\nE       \t(No symbol) [0x0087CDC6]\nE       \t(No symbol) [0x0084BDE9]\nE       \t(No symbol) [0x0084D124]\nE       \tGetHandleVerifier [0x00CA4373+3185251]\nE       \tGetHandleVerifier [0x00CC291A+3309578]\nE       \tGetHandleVerifier [0x00CBCF42+3286578]\nE       \tGetHandleVerifier [0x00A37AE0+643536]\nE       \t(No symbol) [0x0093A20D]\nE       \t(No symbol) [0x009370B8]\nE       \t(No symbol) [0x00937257]\nE       \t(No symbol) [0x00929E00]\nE       \tBaseThreadInitThunk [0x7716FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77E682AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77E6827E+238]\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "5679f0cb-1ab0-465a-9d91-8efb2fa82e1b-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "7d5bacde-ca2d-439e-a532-b17c057e4e60-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "73034258-1452-455b-8618-d7a8a525849d-attachment.txt", "type": "text/plain"}], "start": 1741263735324, "stop": 1741263775662, "uuid": "f58c01c2-2e05-4ad9-9d7e-a1649109362c", "historyId": "ad650e05e5fefdb7ec0c3ca23f07b908", "testCaseId": "ad650e05e5fefdb7ec0c3ca23f07b908", "fullName": "tests.recruiter_test.create_job_test#test_create_jobs", "labels": [{"name": "tag", "value": "create_job"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "create_job_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "15048-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.create_job_test"}]}