{"name": "test_newjob_field_validations", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=134.0.6998.166); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x0069C7F3+24435]\n\t(No symbol) [0x00622074]\n\t(No symbol) [0x004F06E3]\n\t(No symbol) [0x004F70D7]\n\t(No symbol) [0x004F95C5]\n\t(No symbol) [0x00580225]\n\t(No symbol) [0x0055D7BC]\n\t(No symbol) [0x0057F20A]\n\t(No symbol) [0x0055D5B6]\n\t(No symbol) [0x0052C54F]\n\t(No symbol) [0x0052D894]\n\tGetHandleVerifier [0x009A70A3+3213347]\n\tGetHandleVerifier [0x009BB0C9+3295305]\n\tGetHandleVerifier [0x009B558C+3271948]\n\tGetHandleVerifier [0x00737360+658144]\n\t(No symbol) [0x0062B27D]\n\t(No symbol) [0x00628208]\n\t(No symbol) [0x006283A9]\n\t(No symbol) [0x0061AAC0]\n\tBaseThreadInitThunk [0x76C2FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x773B82AE+286]\n\tRtlGetAppContainerNamedObjectPath [0x773B827E+238]", "trace": "env = 'dev', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"957d74cbd0e932ce0bed82c529fa0a55\")>, authenticated_user_recruiter = <Page_Recruiter.login.Loginrecruiter object at 0x000001C9D7DA95B0>\n\n    @pytest.mark.regression\n    @pytest.mark.jobs_page_newjob_field_validations\n    def test_newjob_field_validations(env, driver, authenticated_user_recruiter):\n        logging.info(f\"environment -> {env}\")\n        logging.info(f\"logged in\")\n        WebDriverWait(driver, 15).until(\n            EC.visibility_of_element_located((By.CSS_SELECTOR, \"body > div:nth-child(1) > div:nth-child(3) > div:nth-child(3) > div:nth-child(3) > div:nth-child(1) > div:nth-child(1)\"))\n        )\n        jobs_page = Jobs(driver)\n        jobs_page.jobs_btn.click()\n>       assert_that(jobs_page.Create_Job.is_element_visible()).is_true()\n\ntests\\recruiter_test\\Jobs_test.py:749: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils\\base_elements.py:226: in is_element_visible\n    return element.is_displayed()\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webelement.py:252: in is_displayed\n    return self.parent.execute_script(f\"/* isDisplayed */return ({isDisplayed_js}).apply(null, arguments);\", self)\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:408: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C9D7D7EF60>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x773B82AE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x773B827E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=134.0.6998.166); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0069C7F3+24435]\nE       \t(No symbol) [0x00622074]\nE       \t(No symbol) [0x004F06E3]\nE       \t(No symbol) [0x004F70D7]\nE       \t(No symbol) [0x004F95C5]\nE       \t(No symbol) [0x00580225]\nE       \t(No symbol) [0x0055D7BC]\nE       \t(No symbol) [0x0057F20A]\nE       \t(No symbol) [0x0055D5B6]\nE       \t(No symbol) [0x0052C54F]\nE       \t(No symbol) [0x0052D894]\nE       \tGetHandleVerifier [0x009A70A3+3213347]\nE       \tGetHandleVerifier [0x009BB0C9+3295305]\nE       \tGetHandleVerifier [0x009B558C+3271948]\nE       \tGetHandleVerifier [0x00737360+658144]\nE       \t(No symbol) [0x0062B27D]\nE       \t(No symbol) [0x00628208]\nE       \t(No symbol) [0x006283A9]\nE       \t(No symbol) [0x0061AAC0]\nE       \tBaseThreadInitThunk [0x76C2FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x773B82AE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x773B827E+238]\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "attachments": [{"name": "log", "source": "86b80e7a-526a-47ff-8993-9f3ea3417f16-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "2fb2aec0-be68-4b15-81ec-afc559fa6feb-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "87006de4-0511-4ac9-9fd5-67d94cb4e0d0-attachment.txt", "type": "text/plain"}], "start": 1743144360741, "stop": 1743144361799, "uuid": "71e35ef5-fa5a-45ab-a232-4cef324f17d3", "historyId": "be62d959b0ae3cfd47b8acc2a01e3054", "testCaseId": "be62d959b0ae3cfd47b8acc2a01e3054", "fullName": "tests.recruiter_test.Jobs_test#test_newjob_field_validations", "labels": [{"name": "tag", "value": "jobs_page_newjob_field_validations"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "Jobs_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "10640-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.Jobs_test"}]}