{"name": "test_jobs_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00E774A3+25091]\n\t(No symbol) [0x00DFDC04]\n\t(No symbol) [0x00CDB373]\n\t(No symbol) [0x00D1F4DC]\n\t(No symbol) [0x00D1F65B]\n\t(No symbol) [0x00D5D8E2]\n\t(No symbol) [0x00D41F54]\n\t(No symbol) [0x00D5B49E]\n\t(No symbol) [0x00D41CA6]\n\t(No symbol) [0x00D131D5]\n\t(No symbol) [0x00D1435D]\n\tGetHandleVerifier [0x011707C3+3142947]\n\tGetHandleVerifier [0x01181A2B+3213195]\n\tGetHandleVerifier [0x0117C412+3191154]\n\tGetHandleVerifier [0x00F18720+685184]\n\t(No symbol) [0x00E06E1D]\n\t(No symbol) [0x00E03E18]\n\t(No symbol) [0x00E03FB6]\n\t(No symbol) [0x00DF66F0]\n\tBaseThreadInitThunk [0x7610FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7745809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7745806E+238]", "trace": "env = 'dev', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"47871a4bead2734ec01db4259af032f8\")>, authenticated_user = None\n\n    @pytest.mark.regression\n    @pytest.mark.assessments_page\n    def test_jobs_page(env, driver, authenticated_user):\n        logging.info(f\"environment -> {env}\")\n        login = authenticated_user\n        recruiter_login = Loginrecruiter(driver)\n        recruiter_login.username_btn.send_keys('inderjeetkmcs@gmail.com')\n        recruiter_login.password_btn.send_keys('123')\n        logging.info(f\"Password entered\")\n    \n        # recruiter_login.hidepassword_btn.click()\n        # logging.info(f\"hide passwrd btn clicked\")\n    \n        WebDriverWait(driver, 10).until(\n            EC.element_to_be_clickable((By.XPATH, \"//span[contains(text(), 'Login')]\"))\n        )\n        recruiter_login.login_btn.click()\n        logging.info(f\"login btn clicked\")\n        #time.sleep(5)\n        WebDriverWait(driver, 10).until(\n            EC.visibility_of_element_located((By.XPATH, \"(//h2[text()='Private Jobs'])\"))\n        )\n        assessment_page = Assessments(driver)\n        assessment_page.assessments_btn.click()\n        logging.info(f\"Assessments btn clicked\")\n        logger.info(f\"assessment page btn clicked\")\n        time.sleep(2)\n    \n        inactivejobs = Assessments(driver)\n        inactivejobs.inactive_btn.click()\n    \n        draftjobs = Assessments(driver)\n        draftjobs.drafts_btn.click()\n        time.sleep(2)\n    \n        searchtab = Assessments(driver)\n        searchtab.search_tab.send_keys('Automated 1002')\n    \n        selectjob = Assessments(driver)\n        selectjob.select_job.click()\n    \n        CreateNewAssessment =  Assessments(driver)\n        CreateNewAssessment.Create_New_Assessment.click()\n        time.sleep(4)\n    \n       ## //////////////////  CTQ  ///////////(COMMENT OUT ctq CODE IF CTQ IS NOT SELECTED FOR ASSESSMENT )\n    \n        AddCTQ = Assessments(driver)\n        AddCTQ.Add_CTQ.click()\n    \n        CTQname = Assessments(driver)\n        CTQname.CTQ_name.send_keys('CTQ')\n    \n        CTQduration = Assessments(driver)\n        CTQduration.CTQ_duration.send_keys(10)\n    \n        CTQcutoff = Assessments(driver)\n        CTQcutoff.CTQ_cutoff.click()\n    \n        CutoffValue = Assessments(driver)\n        CutoffValue.Cutoff_value.click()\n    \n        CTQinstructions = Assessments(driver)\n        CTQinstructions.CTQ_instructions.click()\n    \n        CTQques = Assessments(driver)\n        CTQques.CTQ_questions.click()\n    \n    #/////////////// ADD CUSTOM QUESTIONS //////////////////////////\n    \n        #//// FREE TEXT QUES ////\n        ques_to_send = [\n            \"What is your name?\",\n            \"What is your current Location?\",\n            \"Do you have a passport?\",\n            \"Do you know Python?\",\n            \"\"\n        ]\n    \n        for i in range (4):\n            AddCustomQues = Assessments(driver)\n            AddCustomQues.Add_Custom_questions.click()\n    \n            CustomQuesField = Assessments(driver)\n            CustomQuesField.Custom_question_field.send_keys(ques_to_send[i])\n    \n            FreeTextToggle = Assessments(driver)\n            FreeTextToggle.FreeText_Toggle.click()\n    \n            SaveButton = Assessments(driver)\n            SaveButton.Save_button.click()\n    \n        for i in range (2):\n            AddCustomQues = Assessments(driver)\n            AddCustomQues.Add_Custom_questions.click()\n    \n            CustomQuesField = Assessments(driver)\n            CustomQuesField.Custom_question_field.send_keys(ques_to_send[i])\n    \n            SaveButton = Assessments(driver)\n            SaveButton.Save_button.click()\n    \n        CTQLibQues = Assessments(driver)\n        CTQLibQues.questions.click()\n        CTQLibQues.questions2.click()\n    \n        SaveChanges = Assessments(driver)\n        SaveChanges.CTQ_SaveChanges.click()\n    \n      #//////////////////////////////  FUNCTIONAL ASSESSMENT  ////////////// (COMMENT OUT IF FUNCTIONAL IS NOT SELECTED FOR ASSESSMENT ) ////////////////////////\n    \n        searchtab = Assessments(driver)\n        searchtab.search_tab.send_keys('Automated 1002')   #CHANGE THIS ACCORDING TO JOB NAME\n    \n        selectjob = Assessments(driver)\n        selectjob.select_job.click()\n    \n        CreateNewAssessment = Assessments(driver)\n        CreateNewAssessment.Create_New_Assessment.click()\n        time.sleep(4)\n    \n        AddFunctional = Assessments(driver)\n        AddFunctional.Add_Functional.click()\n    \n        FunctionalName = Assessments(driver)\n        FunctionalName.Functional_name.send_keys('Functional')\n    \n        FunctionalCutoff = Assessments(driver)\n        FunctionalCutoff.Functional_cutoff.click()\n        logger.info(f\"cutoff\")\n    \n    \n        FuncCutoffvalue = Assessments(driver)\n        FuncCutoffvalue.Func_Cutoff_value.click()\n    \n    \n        SaveandNext = Assessments(driver)\n        SaveandNext.Save_Next.click()\n        logger.info(f\"Save and Next clicked\")\n    \n    \n        FuncModules =Assessments(driver)\n        FuncModules.Func_Modules.click()\n        logger.info(f\"Modules clicked\")\n        WebDriverWait(driver, 10).until(\n            EC.visibility_of_element_located((By.XPATH, \"//body/div/div/div/div/div[5]/div[1]\"))\n        )\n    \n    \n        SearchModules = Assessments(driver)\n        SearchModules.Func_Search_Modules.send_keys('Mathematical Ability')\n    \n        AddModule = Assessments(driver)\n        AddModule.Add_Module.click()\n    \n        EasyQues = Assessments(driver)\n        EasyQues.Maths_Easy_Ques.click()\n    \n        Ques = Assessments(driver)\n        Ques.Ques_1.click()\n        Ques.Ques_2.click()\n        Ques.Ques_3.click()\n        EasyQues = Assessments(driver)\n>       EasyQues.Easy_Ques.click()\n\ntests\\recruiter_test\\Assessments_test.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPage_Recruiter\\Assessments_page.py:324: in Easy_Ques\n    return BaseElement(driver=self.driver, locator=locator)\nutils\\base_elements.py:43: in __init__\n    self.find()\nutils\\base_elements.py:49: in find\n    element = WebDriverWait(self.driver, 30).until(EC.visibility_of_element_located(locator=self.locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"47871a4bead2734ec01db4259af032f8\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x0000026D1B728AE0>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00E774A3+25091]\nE       \t(No symbol) [0x00DFDC04]\nE       \t(No symbol) [0x00CDB373]\nE       \t(No symbol) [0x00D1F4DC]\nE       \t(No symbol) [0x00D1F65B]\nE       \t(No symbol) [0x00D5D8E2]\nE       \t(No symbol) [0x00D41F54]\nE       \t(No symbol) [0x00D5B49E]\nE       \t(No symbol) [0x00D41CA6]\nE       \t(No symbol) [0x00D131D5]\nE       \t(No symbol) [0x00D1435D]\nE       \tGetHandleVerifier [0x011707C3+3142947]\nE       \tGetHandleVerifier [0x01181A2B+3213195]\nE       \tGetHandleVerifier [0x0117C412+3191154]\nE       \tGetHandleVerifier [0x00F18720+685184]\nE       \t(No symbol) [0x00E06E1D]\nE       \t(No symbol) [0x00E03E18]\nE       \t(No symbol) [0x00E03FB6]\nE       \t(No symbol) [0x00DF66F0]\nE       \tBaseThreadInitThunk [0x7610FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x7745809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7745806E+238]\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "b99ea791-167a-477b-acfc-caf67f106659-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "e251a63f-d4e4-4ece-ba39-2289fc94c6fc-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "a2fccb7e-9fc9-43be-9b3e-ffbff593887d-attachment.txt", "type": "text/plain"}], "start": 1739270162273, "stop": 1739270224458, "uuid": "26b3e21a-20f9-4547-a5a2-d32ed275ea07", "historyId": "f3480c03aab544bdce54dce0e9ba0ecc", "testCaseId": "f3480c03aab544bdce54dce0e9ba0ecc", "fullName": "tests.recruiter_test.Assessments_test#test_jobs_page", "labels": [{"name": "tag", "value": "assessments_page"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "Assessments_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "8432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.Assessments_test"}]}