{"name": "test_dashboard_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=132.0.6834.84); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00FA0A13+25091]\n\t(No symbol) [0x00F2A584]\n\t(No symbol) [0x00E0B3B3]\n\t(No symbol) [0x00E10C6D]\n\t(No symbol) [0x00E12CEA]\n\t(No symbol) [0x00E12D67]\n\t(No symbol) [0x00E553A2]\n\t(No symbol) [0x00E5331E]\n\t(No symbol) [0x00E51427]\n\t(No symbol) [0x00E5072A]\n\t(No symbol) [0x00E4562F]\n\t(No symbol) [0x00E71EAC]\n\t(No symbol) [0x00E44DE4]\n\t(No symbol) [0x00E72144]\n\t(No symbol) [0x00E8B43E]\n\t(No symbol) [0x00E71C46]\n\t(No symbol) [0x00E43175]\n\t(No symbol) [0x00E442FD]\n\tGetHandleVerifier [0x01296493+3128451]\n\tGetHandleVerifier [0x012A994B+3207483]\n\tGetHandleVerifier [0x012A45F2+3186146]\n\tGetHandleVerifier [0x010370C0+641200]\n\t(No symbol) [0x00F336BD]\n\t(No symbol) [0x00F30738]\n\t(No symbol) [0x00F308D6]\n\t(No symbol) [0x00F23040]\n\tBaseThreadInitThunk [0x7610FCC9+25]\n\tRtlGetAppContainerNamedObjectPath [0x7745809E+286]\n\tRtlGetAppContainerNamedObjectPath [0x7745806E+238]", "trace": "env = 'services', driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"1ace5aa1f6bc7d42cae8dfd7a6cb3f0d\")>, authenticated_user = None\n\n    @pytest.mark.regression\n    @pytest.mark.dashboard_page\n    def test_dashboard_page(env, driver, authenticated_user):\n        logging.info(f\"environment -> {env}\")\n        login = authenticated_user\n        recruiter_login = Loginrecruiter(driver)\n        recruiter_login.username_btn.send_keys('inderjeetkmcs@gmail.com')\n        recruiter_login.password_btn.send_keys('123')\n        recruiter_login.hidepassword_btn.click()\n>       recruiter_login.login_btn.click()\n\ntests\\recruiter_test\\Dashboard_test.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils\\base_elements.py:77: in click\n    element.click()\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001FC06A01610>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7745809E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x7745806E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=132.0.6834.84); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00FA0A13+25091]\nE       \t(No symbol) [0x00F2A584]\nE       \t(No symbol) [0x00E0B3B3]\nE       \t(No symbol) [0x00E10C6D]\nE       \t(No symbol) [0x00E12CEA]\nE       \t(No symbol) [0x00E12D67]\nE       \t(No symbol) [0x00E553A2]\nE       \t(No symbol) [0x00E5331E]\nE       \t(No symbol) [0x00E51427]\nE       \t(No symbol) [0x00E5072A]\nE       \t(No symbol) [0x00E4562F]\nE       \t(No symbol) [0x00E71EAC]\nE       \t(No symbol) [0x00E44DE4]\nE       \t(No symbol) [0x00E72144]\nE       \t(No symbol) [0x00E8B43E]\nE       \t(No symbol) [0x00E71C46]\nE       \t(No symbol) [0x00E43175]\nE       \t(No symbol) [0x00E442FD]\nE       \tGetHandleVerifier [0x01296493+3128451]\nE       \tGetHandleVerifier [0x012A994B+3207483]\nE       \tGetHandleVerifier [0x012A45F2+3186146]\nE       \tGetHandleVerifier [0x010370C0+641200]\nE       \t(No symbol) [0x00F336BD]\nE       \t(No symbol) [0x00F30738]\nE       \t(No symbol) [0x00F308D6]\nE       \t(No symbol) [0x00F23040]\nE       \tBaseThreadInitThunk [0x7610FCC9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x7745809E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x7745806E+238]\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "attachments": [{"name": "log", "source": "dc1f6b0f-fd21-4ddd-9976-6eb1f3f48b5e-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "bf6acfb8-862d-46b2-aefb-e5d611dfd339-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "3342b1c2-0a52-48b5-b90e-8bf675258e5d-attachment.txt", "type": "text/plain"}], "start": 1737351497479, "stop": 1737351498867, "uuid": "9a52773f-c781-4418-9a6a-f177016cfdbe", "historyId": "cc417702adb16716095707cd1338ee81", "testCaseId": "cc417702adb16716095707cd1338ee81", "fullName": "tests.recruiter_test.Dashboard_test#test_dashboard_page", "labels": [{"name": "tag", "value": "dashboard_page"}, {"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests.recruiter_test"}, {"name": "suite", "value": "Dashboard_test"}, {"name": "host", "value": "DESKTOP-HRHMBRL"}, {"name": "thread", "value": "9428-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.recruiter_test.Dashboard_test"}]}